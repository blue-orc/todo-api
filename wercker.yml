# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: go get
        code: |
          go get

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

       - script:
        name: copy artifacts to output dir
        code: |
          # artifacts
          ls -l
          cp ${WERCKER_ROOT}/source "$WERCKER_OUTPUT_DIR"
          cp -a ${WERCKER_ROOT}/kubernetes "$WERCKER_OUTPUT_DIR"

docker-push:

  box:
    id: golang

  steps:

    - script:
        name: copy binaries to /opt/app
        code: |
          mkdir -p /opt
          cp ${WERCKER_ROOT}/source /opt/source
    - script:
        name: echo docker tag
        code: |
          echo "DOCKER IMAGE:TAG"
          echo "iad.ocir.io/orasenatdpltdevopsnetw01/todo-api:${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"
    # Pushing to a quay.io repository
    # For other docker repository refer to this doc: http://devcenter.wercker.com/docs/containers/pushing-containers
    - internal/docker-push:
        repository: iad.ocir.io/orasenatdpltdevopsnetw01/todo-api
        registry: https://iad.ocir.io
        username: $OCIR_USERNAME
        password: $OCIR_PASSWORD
        tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}
        entrypoint: /opt/source
        port: 5000/tcp

deploy:

  box:
    id: golang

  steps:

    - script:
        name: debug
        code: |
          echo $WERCKER_OUTPUT_DIR
          ls -l $WERCKER_OUTPUT_DIR
          echo $WERCKER_ROOT
          ls -l $WERCKER_ROOT
    - bash-template:
        cwd: $WERCKER_ROOT/kubernetes/deployment

    - script:
        name: Remove template files
        cwd: $WERCKER_ROOT/kubernetes/deployment
        code: |
          rm *.template.yaml
    - script:
        name: debug
        cwd: $WERCKER_ROOT/kubernetes/deployment
        code: |
          ls -l
    - script:
        name: echo tags
        code: |
          cat $WERCKER_ROOT/kubernetes/deployment/deployment.yaml
          echo "Docker image and tag:"
          echo "${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"
    - kubectl:
        cwd: $WERCKER_ROOT/kubernetes/deployment
        server: ${KUBE_ENDPOINT}
        username: ${KUBE_USERNAME}
        password: ${KUBE_PASSWORD}
        insecure-skip-tls-verify: true
        command: --namespace ${KUBE_NAMESPACE} apply -f .
