box: golang
build:
  steps:
    - wercker/setup-go-workspace
    - script:
        name: move
        code: |
          cp -r ${WERCKER_ROOT}/ $GOPATH/src/todo-api
          cd $GOPATH
    # Gets the dependencies
    - script:
        name: go get
        code: |
          go get
    # Build the project
    - script:
        name: go build
        code: |
          go build ./...
    # Test the project
    - script:
        name: go test
        code: |
          go test ./...
    - script:
        name: copy artifacts to output dir
        code: |
          # artifacts
          ls -l
          cp -r ${WERCKER_ROOT}/ "$WERCKER_OUTPUT_DIR"
          cp -r -a ${WERCKER_ROOT}/ "$WERCKER_OUTPUT_DIR"
docker-push:
  box:
    id: golang
  steps:
    - script:
        name: copy binaries to /opt/app
        code: |
          mkdir -p /opt
          cp -r ${WERCKER_ROOT}/source /opt/source
    - script:
        name: echo docker tag
        code: |
          echo "DOCKER IMAGE:TAG"
    - internal/docker-push:
        repository: orasenatdpltdevopsnetw01
        registry: https://iad.ocir.io
        username: $OCIR_USERNAME
        password: $OCIR_PASSWORD
        tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}
        entrypoint: /opt/source
        port: 5000/tcp
deploy:
  box:
    id: golang
  steps:
    - script:
        name: debug
        code: |
          echo $WERCKER_OUTPUT_DIR
          ls -l $WERCKER_OUTPUT_DIR
          echo $WERCKER_ROOT
          ls -l $WERCKER_ROOT
    - bash-template:
        cwd: $WERCKER_ROOT/

    - script:
        name: debug
        cwd: $WERCKER_ROOT/
        code: |
          ls -l
    - script:
        name: echo tags
        code: |
          cat $WERCKER_ROOT/deployment.yaml
          echo "Docker image and tag:"
          echo "${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"
    - kubectl:
        cwd: $WERCKER_ROOT/kubernetes/deployment
        # kubectl cluster-info > kubernetes master is running at:
        server: $KUBE_ENDPOINT
        token: $KUBE_USER_TOKEN
        insecure-skip-tls-verify: true
        command: --namespace apply -f .
